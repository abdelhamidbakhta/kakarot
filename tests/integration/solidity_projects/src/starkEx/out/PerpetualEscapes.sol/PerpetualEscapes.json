{
  "abi": [
    {
      "inputs": [],
      "name": "configurationDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "configurationHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "starkKey",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "quantizedAmount",
          "type": "uint256"
        }
      ],
      "name": "escape",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "globalConfigurationHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "configurationDelay()": "c1a85130",
    "configurationHash(uint256)": "f2011f66",
    "escape(uint256,uint256,uint256)": "366a2670",
    "globalConfigurationHash()": "adac3e15",
    "isFrozen()": "33eeb147"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"configurationDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"configurationHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"starkKey\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantizedAmount\",\"type\":\"uint256\"}],\"name\":\"escape\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"globalConfigurationHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFrozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Escaping the exchange is the last resort for users that wish to withdraw their funds without relying on off-chain exchange services. The Escape functionality may only be invoked once the contract has become frozen. This will be as the result of an unserviced forcedAction request At that point, any escaper entity may perform an escape operation as follows: 1. Escapers call the :sol:mod:`PerpetualEscapeVerifier` contract with the Merkle proof for the vault to be evicted and the shared state. If the proof is valid, this results in the registration of said proof. 2. Escapers call :sol:func:`escape` function with the starkKey, vaultId and quantizedAmount matching the proof from step 1. 3. The owner of the vault may then withdraw this amount from the pending withdrawals account by calling the normal withdraw function (see :sol:mod:`Withdrawals`) to transfer the funds to the users ERC20 account. Note that while anyone can perform the initial steps of the escape operation (including the exchange operator, for example), only the owner of the vault may perform the final step of transferring the funds.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"tests/integration/solidity_projects/src/starkEx/src/perpetual/components/PerpetualEscapes.sol\":\"PerpetualEscapes\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"tests/integration/solidity_projects/src/starkEx/src/components/GovernanceStorage.sol\":{\"keccak256\":\"0x2816690a3d47659dd2a1f50b9abd9270b6c63bcc365d95353eaeb5b696a131f6\",\"license\":\"Apache-2.0.\",\"urls\":[\"bzz-raw://0cc498ed76f699cf3684f0753937b1ae73fc992f1a820b1435a0de88642605dc\",\"dweb:/ipfs/QmURSXwjkgNNs1hXU2uYMKSHd796QmS1qp9amq96G4e77d\"]},\"tests/integration/solidity_projects/src/starkEx/src/components/MainStorage.sol\":{\"keccak256\":\"0x6ec1e764edc595015155f1510bc0c436e8621f6a30bb5da348cda4188f88a63b\",\"license\":\"Apache-2.0.\",\"urls\":[\"bzz-raw://c5d4aaa4c6041f5a7c4da1a14c4cc57e27e00bfa047f3ad9cc9f718fe01b55ef\",\"dweb:/ipfs/QmUCKey3zxTaxxK4pjXLARjKG8oKADcsSXZKvM9b3U1MEM\"]},\"tests/integration/solidity_projects/src/starkEx/src/interfaces/IFactRegistry.sol\":{\"keccak256\":\"0xab04b296b506dfb0b4a8828f3dc463072fd50449a5ad8327d1baf01438b0fb35\",\"license\":\"Apache-2.0.\",\"urls\":[\"bzz-raw://e451abe007f98081d1adfd759cc4168f81982992d8c0554650b94d37bc009e64\",\"dweb:/ipfs/QmVBNUWFhNX8PqSMcqRkHVaTbcm7KNpgSg91Sj6MepFG6u\"]},\"tests/integration/solidity_projects/src/starkEx/src/interfaces/MAcceptModifications.sol\":{\"keccak256\":\"0x0ebd5b336716bc9d002c665770580f333f9ac7e9215afe74c50daffac1c973de\",\"license\":\"Apache-2.0.\",\"urls\":[\"bzz-raw://959663e98dd1457ac6f19e68d92986bd5295d164bc78669c375088b92767df13\",\"dweb:/ipfs/QmcRniXbM1noVZEJaSAYHehjaxeyUDgvHYNWqBLKehiU5M\"]},\"tests/integration/solidity_projects/src/starkEx/src/interfaces/MFreezable.sol\":{\"keccak256\":\"0x6915d6f81f939d49bb976017c1ac1f0446e022d17338bb1ea3832ebf83f77ec5\",\"license\":\"Apache-2.0.\",\"urls\":[\"bzz-raw://648ce203862a87e8ec8bfbaf785b86045809488f825c55f4b07b9a7fc84ba198\",\"dweb:/ipfs/Qmb7HNdyYRVhdKzirnNPM3CMconR6t2Tp3Thj1dfCvgg1t\"]},\"tests/integration/solidity_projects/src/starkEx/src/interfaces/MGovernance.sol\":{\"keccak256\":\"0xd7ea75c83640c8fa7a0fe91baafc17bf58dbc146874ab0866a17154b1dda9858\",\"license\":\"Apache-2.0.\",\"urls\":[\"bzz-raw://6d41999882a5eb4cae0f598137906b540057b6e8b39742d6e5141e493b14b7b7\",\"dweb:/ipfs/QmWMwr3XBr3ndvHtg2w96EbTTf1CMCzz9UdpM8GizyFQ8h\"]},\"tests/integration/solidity_projects/src/starkEx/src/libraries/Common.sol\":{\"keccak256\":\"0xd6c0b3478b1752f363680494de681bc5e78b333570a1755629639980f014ef38\",\"license\":\"Apache-2.0.\",\"urls\":[\"bzz-raw://8b9b89f3e9fd825c491a34ecd23e742de499d3da37be599ee0591e42c987cfbc\",\"dweb:/ipfs/QmNU23npa22GpMjuMucnsA3u8Uj1VzxKPo1dx1x3sMPgsP\"]},\"tests/integration/solidity_projects/src/starkEx/src/libraries/LibConstants.sol\":{\"keccak256\":\"0x8fe357f8fb57a437d4e390b57010e8cf7383b31bf074e45aa42ccc7b648e2cc8\",\"license\":\"Apache-2.0.\",\"urls\":[\"bzz-raw://1b6dcb450fd1c09e742b489e626d1cbac7588043d57e89aafe78143b04f26f6e\",\"dweb:/ipfs/QmWuvyK93hHFTaPBkwZAzTLZ5GrYXbSvJbJHKLTg9bkMtN\"]},\"tests/integration/solidity_projects/src/starkEx/src/perpetual/components/PerpetualEscapes.sol\":{\"keccak256\":\"0x6eac5da8a8254b056e6c893acadfad3573ffd96204473aa4e0de26eedaccb293\",\"license\":\"Apache-2.0.\",\"urls\":[\"bzz-raw://b71d57a8a22f47311dfc01fafa933b11e15ce9c2dd656d100579641a7e681632\",\"dweb:/ipfs/QmdLYaAfbRSnTaAh3czvAYWhdjvUhiMCFm3yXnCCMd8kNj\"]},\"tests/integration/solidity_projects/src/starkEx/src/perpetual/components/PerpetualStorage.sol\":{\"keccak256\":\"0x4e9995646f19709013dfbfb681e4bcb3049fd718ee303dc1346fcaa69078e89b\",\"license\":\"Apache-2.0.\",\"urls\":[\"bzz-raw://f96ff3f5c6ffd09034e762d8e081d40bf592c144e4d8a0c86010c268496c4388\",\"dweb:/ipfs/QmfXMhctteBZjzWwXYoY2tpXM78PJP4PcarzBrLkFz2E3w\"]},\"tests/integration/solidity_projects/src/starkEx/src/upgrade/ProxyStorage.sol\":{\"keccak256\":\"0xa368aa0492fcaabbc85fb544d1cc29c7314431f06a69f0b0f6117bff58d145c9\",\"license\":\"Apache-2.0.\",\"urls\":[\"bzz-raw://c03493bf00d92b3397767abc02d014844dc0edc4cc28631a8146abed3d397ded\",\"dweb:/ipfs/QmeTgAMpd5EAzQCDpZmxWWfFQQfNxZdzZvGzBz6HPKeJxD\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.6.12+commit.27d51765"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "configurationDelay",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "configurationHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "starkKey",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantizedAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "escape"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "globalConfigurationHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isFrozen",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "tests/integration/solidity_projects/src/starkEx/src/perpetual/components/PerpetualEscapes.sol": "PerpetualEscapes"
      },
      "libraries": {}
    },
    "sources": {
      "tests/integration/solidity_projects/src/starkEx/src/components/GovernanceStorage.sol": {
        "keccak256": "0x2816690a3d47659dd2a1f50b9abd9270b6c63bcc365d95353eaeb5b696a131f6",
        "urls": [
          "bzz-raw://0cc498ed76f699cf3684f0753937b1ae73fc992f1a820b1435a0de88642605dc",
          "dweb:/ipfs/QmURSXwjkgNNs1hXU2uYMKSHd796QmS1qp9amq96G4e77d"
        ],
        "license": "Apache-2.0."
      },
      "tests/integration/solidity_projects/src/starkEx/src/components/MainStorage.sol": {
        "keccak256": "0x6ec1e764edc595015155f1510bc0c436e8621f6a30bb5da348cda4188f88a63b",
        "urls": [
          "bzz-raw://c5d4aaa4c6041f5a7c4da1a14c4cc57e27e00bfa047f3ad9cc9f718fe01b55ef",
          "dweb:/ipfs/QmUCKey3zxTaxxK4pjXLARjKG8oKADcsSXZKvM9b3U1MEM"
        ],
        "license": "Apache-2.0."
      },
      "tests/integration/solidity_projects/src/starkEx/src/interfaces/IFactRegistry.sol": {
        "keccak256": "0xab04b296b506dfb0b4a8828f3dc463072fd50449a5ad8327d1baf01438b0fb35",
        "urls": [
          "bzz-raw://e451abe007f98081d1adfd759cc4168f81982992d8c0554650b94d37bc009e64",
          "dweb:/ipfs/QmVBNUWFhNX8PqSMcqRkHVaTbcm7KNpgSg91Sj6MepFG6u"
        ],
        "license": "Apache-2.0."
      },
      "tests/integration/solidity_projects/src/starkEx/src/interfaces/MAcceptModifications.sol": {
        "keccak256": "0x0ebd5b336716bc9d002c665770580f333f9ac7e9215afe74c50daffac1c973de",
        "urls": [
          "bzz-raw://959663e98dd1457ac6f19e68d92986bd5295d164bc78669c375088b92767df13",
          "dweb:/ipfs/QmcRniXbM1noVZEJaSAYHehjaxeyUDgvHYNWqBLKehiU5M"
        ],
        "license": "Apache-2.0."
      },
      "tests/integration/solidity_projects/src/starkEx/src/interfaces/MFreezable.sol": {
        "keccak256": "0x6915d6f81f939d49bb976017c1ac1f0446e022d17338bb1ea3832ebf83f77ec5",
        "urls": [
          "bzz-raw://648ce203862a87e8ec8bfbaf785b86045809488f825c55f4b07b9a7fc84ba198",
          "dweb:/ipfs/Qmb7HNdyYRVhdKzirnNPM3CMconR6t2Tp3Thj1dfCvgg1t"
        ],
        "license": "Apache-2.0."
      },
      "tests/integration/solidity_projects/src/starkEx/src/interfaces/MGovernance.sol": {
        "keccak256": "0xd7ea75c83640c8fa7a0fe91baafc17bf58dbc146874ab0866a17154b1dda9858",
        "urls": [
          "bzz-raw://6d41999882a5eb4cae0f598137906b540057b6e8b39742d6e5141e493b14b7b7",
          "dweb:/ipfs/QmWMwr3XBr3ndvHtg2w96EbTTf1CMCzz9UdpM8GizyFQ8h"
        ],
        "license": "Apache-2.0."
      },
      "tests/integration/solidity_projects/src/starkEx/src/libraries/Common.sol": {
        "keccak256": "0xd6c0b3478b1752f363680494de681bc5e78b333570a1755629639980f014ef38",
        "urls": [
          "bzz-raw://8b9b89f3e9fd825c491a34ecd23e742de499d3da37be599ee0591e42c987cfbc",
          "dweb:/ipfs/QmNU23npa22GpMjuMucnsA3u8Uj1VzxKPo1dx1x3sMPgsP"
        ],
        "license": "Apache-2.0."
      },
      "tests/integration/solidity_projects/src/starkEx/src/libraries/LibConstants.sol": {
        "keccak256": "0x8fe357f8fb57a437d4e390b57010e8cf7383b31bf074e45aa42ccc7b648e2cc8",
        "urls": [
          "bzz-raw://1b6dcb450fd1c09e742b489e626d1cbac7588043d57e89aafe78143b04f26f6e",
          "dweb:/ipfs/QmWuvyK93hHFTaPBkwZAzTLZ5GrYXbSvJbJHKLTg9bkMtN"
        ],
        "license": "Apache-2.0."
      },
      "tests/integration/solidity_projects/src/starkEx/src/perpetual/components/PerpetualEscapes.sol": {
        "keccak256": "0x6eac5da8a8254b056e6c893acadfad3573ffd96204473aa4e0de26eedaccb293",
        "urls": [
          "bzz-raw://b71d57a8a22f47311dfc01fafa933b11e15ce9c2dd656d100579641a7e681632",
          "dweb:/ipfs/QmdLYaAfbRSnTaAh3czvAYWhdjvUhiMCFm3yXnCCMd8kNj"
        ],
        "license": "Apache-2.0."
      },
      "tests/integration/solidity_projects/src/starkEx/src/perpetual/components/PerpetualStorage.sol": {
        "keccak256": "0x4e9995646f19709013dfbfb681e4bcb3049fd718ee303dc1346fcaa69078e89b",
        "urls": [
          "bzz-raw://f96ff3f5c6ffd09034e762d8e081d40bf592c144e4d8a0c86010c268496c4388",
          "dweb:/ipfs/QmfXMhctteBZjzWwXYoY2tpXM78PJP4PcarzBrLkFz2E3w"
        ],
        "license": "Apache-2.0."
      },
      "tests/integration/solidity_projects/src/starkEx/src/upgrade/ProxyStorage.sol": {
        "keccak256": "0xa368aa0492fcaabbc85fb544d1cc29c7314431f06a69f0b0f6117bff58d145c9",
        "urls": [
          "bzz-raw://c03493bf00d92b3397767abc02d014844dc0edc4cc28631a8146abed3d397ded",
          "dweb:/ipfs/QmeTgAMpd5EAzQCDpZmxWWfFQQfNxZdzZvGzBz6HPKeJxD"
        ],
        "license": "Apache-2.0."
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "tests/integration/solidity_projects/src/starkEx/src/perpetual/components/PerpetualEscapes.sol",
    "id": 9734,
    "exportedSymbols": {
      "PerpetualEscapes": [
        9733
      ]
    },
    "nodeType": "SourceUnit",
    "src": "40:2302:71",
    "nodes": [
      {
        "id": 9648,
        "nodeType": "PragmaDirective",
        "src": "40:24:71",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".12"
        ]
      },
      {
        "id": 9649,
        "nodeType": "ImportDirective",
        "src": "66:42:71",
        "nodes": [],
        "absolutePath": "tests/integration/solidity_projects/src/starkEx/src/libraries/LibConstants.sol",
        "file": "../../libraries/LibConstants.sol",
        "scope": 9734,
        "sourceUnit": 8096,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9650,
        "nodeType": "ImportDirective",
        "src": "109:51:71",
        "nodes": [],
        "absolutePath": "tests/integration/solidity_projects/src/starkEx/src/interfaces/MAcceptModifications.sol",
        "file": "../../interfaces/MAcceptModifications.sol",
        "scope": 9734,
        "sourceUnit": 6658,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9651,
        "nodeType": "ImportDirective",
        "src": "161:41:71",
        "nodes": [],
        "absolutePath": "tests/integration/solidity_projects/src/starkEx/src/interfaces/MFreezable.sol",
        "file": "../../interfaces/MFreezable.sol",
        "scope": 9734,
        "sourceUnit": 6776,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9652,
        "nodeType": "ImportDirective",
        "src": "203:44:71",
        "nodes": [],
        "absolutePath": "tests/integration/solidity_projects/src/starkEx/src/interfaces/IFactRegistry.sol",
        "file": "../../interfaces/IFactRegistry.sol",
        "scope": 9734,
        "sourceUnit": 6584,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9653,
        "nodeType": "ImportDirective",
        "src": "248:32:71",
        "nodes": [],
        "absolutePath": "tests/integration/solidity_projects/src/starkEx/src/perpetual/components/PerpetualStorage.sol",
        "file": "./PerpetualStorage.sol",
        "scope": 9734,
        "sourceUnit": 9758,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9733,
        "nodeType": "ContractDefinition",
        "src": "1420:921:71",
        "nodes": [
          {
            "id": 9670,
            "nodeType": "FunctionDefinition",
            "src": "1515:108:71",
            "nodes": [],
            "body": {
              "id": 9669,
              "nodeType": "Block",
              "src": "1568:55:71",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9665,
                      "name": "escapeVerifierAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1868,
                      "src": "1578:21:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 9666,
                      "name": "escapeVerifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9662,
                      "src": "1602:14:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1578:38:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9668,
                  "nodeType": "ExpressionStatement",
                  "src": "1578:38:71"
                }
              ]
            },
            "documentation": null,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "overrides": null,
            "parameters": {
              "id": 9663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9662,
                  "mutability": "mutable",
                  "name": "escapeVerifier",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9670,
                  "src": "1535:22:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9661,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1535:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1534:24:71"
            },
            "returnParameters": {
              "id": 9664,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1568:0:71"
            },
            "scope": 9733,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 9732,
            "nodeType": "FunctionDefinition",
            "src": "1685:654:71",
            "nodes": [],
            "body": {
              "id": 9731,
              "nodeType": "Block",
              "src": "1811:528:71",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1829:21:71",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 9682,
                            "name": "escapesUsed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1898,
                            "src": "1830:11:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                              "typeString": "mapping(uint256 => bool)"
                            }
                          },
                          "id": 9684,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 9683,
                            "name": "vaultId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9674,
                            "src": "1842:7:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1830:20:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4553434150455f414c52454144595f55534544",
                        "id": 9686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1852:21:71",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b6d01df37448d08e6a5e6cd9779d2d064043df6d91c73970a21b8a9e7a2bdfff",
                          "typeString": "literal_string \"ESCAPE_ALREADY_USED\""
                        },
                        "value": "ESCAPE_ALREADY_USED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b6d01df37448d08e6a5e6cd9779d2d064043df6d91c73970a21b8a9e7a2bdfff",
                          "typeString": "literal_string \"ESCAPE_ALREADY_USED\""
                        }
                      ],
                      "id": 9681,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1821:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1821:53:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9688,
                  "nodeType": "ExpressionStatement",
                  "src": "1821:53:71"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 9689,
                        "name": "escapesUsed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1898,
                        "src": "1926:11:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 9691,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 9690,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9674,
                        "src": "1938:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1926:20:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 9692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1949:4:71",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1926:27:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9694,
                  "nodeType": "ExpressionStatement",
                  "src": "1926:27:71"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9695,
                      "name": "escapesUsedCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1900,
                      "src": "1963:16:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 9696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1983:1:71",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1963:21:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9698,
                  "nodeType": "ExpressionStatement",
                  "src": "1963:21:71"
                },
                {
                  "assignments": [
                    9700
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9700,
                      "mutability": "mutable",
                      "name": "claimHash",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 9731,
                      "src": "1995:17:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 9699,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1995:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 9710,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 9704,
                            "name": "starkKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9672,
                            "src": "2049:8:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 9705,
                            "name": "quantizedAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9676,
                            "src": "2059:15:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 9706,
                            "name": "sharedStateHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9748,
                            "src": "2076:15:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 9707,
                            "name": "vaultId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9674,
                            "src": "2093:7:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 9702,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2038:3:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 9703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2038:10:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 9708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2038:63:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 9701,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2015:9:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 9709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2015:96:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1995:116:71"
                },
                {
                  "assignments": [
                    9712
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9712,
                      "mutability": "mutable",
                      "name": "escapeVerifier",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 9731,
                      "src": "2121:28:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFactRegistry_$6583",
                        "typeString": "contract IFactRegistry"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 9711,
                        "name": "IFactRegistry",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 6583,
                        "src": "2121:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFactRegistry_$6583",
                          "typeString": "contract IFactRegistry"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 9716,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9714,
                        "name": "escapeVerifierAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1868,
                        "src": "2166:21:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9713,
                      "name": "IFactRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6583,
                      "src": "2152:13:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IFactRegistry_$6583_$",
                        "typeString": "type(contract IFactRegistry)"
                      }
                    },
                    "id": 9715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2152:36:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFactRegistry_$6583",
                      "typeString": "contract IFactRegistry"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2121:67:71"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 9720,
                            "name": "claimHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9700,
                            "src": "2229:9:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 9718,
                            "name": "escapeVerifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9712,
                            "src": "2206:14:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IFactRegistry_$6583",
                              "typeString": "contract IFactRegistry"
                            }
                          },
                          "id": 9719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isValid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6582,
                          "src": "2206:22:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32) view external returns (bool)"
                          }
                        },
                        "id": 9721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2206:33:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4553434150455f4c41434b535f50524f4f46",
                        "id": 9722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2241:20:71",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5a5f7e2488fb7380f102ebac2f29c071624c4942473e122a1538d0c88dd43f0e",
                          "typeString": "literal_string \"ESCAPE_LACKS_PROOF\""
                        },
                        "value": "ESCAPE_LACKS_PROOF"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5a5f7e2488fb7380f102ebac2f29c071624c4942473e122a1538d0c88dd43f0e",
                          "typeString": "literal_string \"ESCAPE_LACKS_PROOF\""
                        }
                      ],
                      "id": 9717,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2198:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2198:64:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9724,
                  "nodeType": "ExpressionStatement",
                  "src": "2198:64:71"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9726,
                        "name": "starkKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9672,
                        "src": "2289:8:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9727,
                        "name": "systemAssetType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9740,
                        "src": "2299:15:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9728,
                        "name": "quantizedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9676,
                        "src": "2316:15:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9725,
                      "name": "allowWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6647,
                      "src": "2273:15:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256)"
                      }
                    },
                    "id": 9729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2273:59:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9730,
                  "nodeType": "ExpressionStatement",
                  "src": "2273:59:71"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "366a2670",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 9679,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9678,
                  "name": "onlyFrozen",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6771,
                  "src": "1800:10:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1800:10:71"
              }
            ],
            "name": "escape",
            "overrides": null,
            "parameters": {
              "id": 9677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9672,
                  "mutability": "mutable",
                  "name": "starkKey",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9732,
                  "src": "1710:16:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9671,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1710:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9674,
                  "mutability": "mutable",
                  "name": "vaultId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9732,
                  "src": "1736:15:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9673,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1736:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9676,
                  "mutability": "mutable",
                  "name": "quantizedAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9732,
                  "src": "1761:23:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9675,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1761:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1700:90:71"
            },
            "returnParameters": {
              "id": 9680,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1811:0:71"
            },
            "scope": 9733,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9655,
              "name": "PerpetualStorage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9757,
              "src": "1458:16:71",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PerpetualStorage_$9757",
                "typeString": "contract PerpetualStorage"
              }
            },
            "id": 9656,
            "nodeType": "InheritanceSpecifier",
            "src": "1458:16:71"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9657,
              "name": "MAcceptModifications",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6657,
              "src": "1476:20:71",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MAcceptModifications_$6657",
                "typeString": "contract MAcceptModifications"
              }
            },
            "id": 9658,
            "nodeType": "InheritanceSpecifier",
            "src": "1476:20:71"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9659,
              "name": "MFreezable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6775,
              "src": "1498:10:71",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MFreezable_$6775",
                "typeString": "contract MFreezable"
              }
            },
            "id": 9660,
            "nodeType": "InheritanceSpecifier",
            "src": "1498:10:71"
          }
        ],
        "contractDependencies": [
          1617,
          1992,
          6657,
          6775,
          9757,
          18407
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 9654,
          "nodeType": "StructuredDocumentation",
          "src": "282:1137:71",
          "text": "Escaping the exchange is the last resort for users that wish to withdraw their funds without\nrelying on off-chain exchange services. The Escape functionality may only be invoked once the\ncontract has become frozen. This will be as the result of an unserviced forcedAction request\nAt that point, any escaper entity may perform an escape operation as follows:\n1. Escapers call the :sol:mod:`PerpetualEscapeVerifier` contract with the Merkle proof for the vault to be evicted and the shared state. If the proof is valid, this results in the registration of said proof.\n2. Escapers call :sol:func:`escape` function with the starkKey, vaultId and quantizedAmount matching the proof from step 1.\n3. The owner of the vault may then withdraw this amount from the pending withdrawals account by calling the normal withdraw function (see :sol:mod:`Withdrawals`) to transfer the funds to the users ERC20 account.\nNote that while anyone can perform the initial steps of the escape operation (including the\nexchange operator, for example), only the owner of the vault may perform the final step of\ntransferring the funds."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          9733,
          6775,
          6657,
          9757,
          1992,
          18407,
          1617
        ],
        "name": "PerpetualEscapes",
        "scope": 9734
      }
    ],
    "license": "Apache-2.0."
  },
  "id": 71
}