name: NIGHTLY-FUZZING

on:
  schedule:
    - cron: 20 0 * * *

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions: read-all

jobs:
  tests-unit:
    runs-on: ubuntu-latest-16-cores
    env:
      PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: python
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10.14
        uses: actions/setup-python@v5
        with:
          python-version: 3.10.14
      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v4
        with:
          path: ~/.local
          key: poetry-${{ runner.os }}
      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .venv
          installer-parallel: true
      - name: Enforce poetry config
        run: |
          poetry config virtualenvs.in-project true
          poetry config virtualenvs.create true
          poetry config virtualenvs.path .venv
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: make setup
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
      - name: Run tests
        env:
          HYPOTHESIS_PROFILE: nightly
        run: make test-unit
      - name: Upload coverage report to codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage/
