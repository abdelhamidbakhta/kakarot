name: EF Tests

on:
  push:
    branches:
      - "main"
      - "feat/add-ef-tests-to-ci"

jobs:
  ef-tests:
    runs-on: ubuntu-latest
    steps:

      # Install packages
      - name: install packages
        run: sudo apt-get install curl

      - name: install foundry
        run: curl -L https://foundry.paradigm.xyz | bash

      # Build Kakarot
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9.13"
      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: poetry-${{ runner.os }}
      - name: Install Poetry
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - run: poetry config installer.modern-installation false
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: make setup
      - name: Build
        run: |
          STARKNET_NETWORK=katana poetry run python ./scripts/compile_kakarot.py && make build-sol
      - name: Move Kakarot build
        run: mkdir ~/.kakarot && mv ./build ~/.kakarot

    # Make Katana dump for the build
      - name: Checkout kakarot-rpc
        uses: actions/checkout@v3
        with:
            repository: kkrt-labs/kakarot-rpc
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
            cache-on-failure: "true"
      - name: make environment
        run: ./scripts/make_with_env.sh
      - name: build dump-katana
        run: cargo build --features="dump" --bin dump-katana --release
      - name: make kakarot dump
        run: COMPILED_KAKAROT_PATH=~/.kakarot/build ./target/release/dump-katana
      - name: move katana dump
        run: mv ./.katana ~/.kakarot/.katana

    # run ef-tests
      - name: Checkout ef-tests
        uses: actions/checkout@v3
        with:
            repository: kkrt-labs/ef-tests
      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
            cache-on-failure: "true"
      - name: setup
        run: make setup
      - name: fetch dump
        run: GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} make fetch-dump
      - uses: taiki-e/install-action@nextest
      - name: copy katana dumps
        run: cp -rf ~/.kakarot/.katana .
    # run tests
      - name: run tests
        run: make ef-tests
